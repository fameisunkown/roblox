-- FISH IDS
-- Shark: 12
-- Grey Fish: 15
-- Chicken: 10
-------
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
local Window = Rayfield:CreateWindow({
	Name = "run hub / fischkit",
	Icon = "webhook",
	LoadingTitle = "run hub / fischkit",
	LoadingSubtitle = "by fame",
	Theme = "Default",
	DisableRayfieldPrompts = true,
	DisableBuildWarnings = true,
})

local MainTab = Window:CreateTab("Main", "radio")

local Remotes = game:GetService("ReplicatedStorage"):WaitForChild("Remotes")
_G.Autofishing = false
local autosell = false
local maxKG = 100

local function returnFish(cust)
	local caughtFish
	while true do
		local Waters = workspace:WaitForChild("Waters")
		for _, v in ipairs(Waters:GetChildren()) do
			caughtFish = Remotes.RequestFish:InvokeServer(v.Name)
			if caughtFish.Size >= cust then break end
		end
		if caughtFish.Size >= cust then break end
		
		game["Run Service"].Stepped:Wait()
	end
	return caughtFish
end

MainTab:CreateDivider("Fishing")
local fishingLabel = MainTab:CreateLabel("Status ‣ Not Fishing", "fish-symbol")
MainTab:CreateToggle({
	Name = "Autofish",
	CurrentValue = false,
	Callback = function(state)
		_G.Autofishing = state
		if _G.Autofishing then
			task.spawn(function()
				while _G.Autofishing do
					fishingLabel:Set("Status ‣ Fishing")
					local caughtFish = returnFish(maxKG or 0)
					fishingLabel:Set(string.format("Status ‣ %s KG ‣ %s ID",tostring(caughtFish.Size),tostring(caughtFish.FishId)))
					
					if maxKG <= 45 then
						task.wait(1.6)
					else
						task.wait(1.4)
					end
					
					Remotes.CatchFish:FireServer()
					fishingLabel:Set("Status ‣ Not Fishing")
					task.wait(1.45)
				end
			end)
		else
			fishingLabel:Set("Status ‣ Not Fishing")
		end
	end
})

MainTab:CreateInput({
	Name = "Max KG",
	CurrentValue = tostring(maxKG),
	PlaceholderText = "Enter Max KG",
	RemoveTextAfterFocusLost = false,
	Callback = function(value)
		maxKG = tonumber(value) or maxKG
	end
})


MainTab:CreateToggle({
	Name = "Auto Sell",
	CurrentValue = false,
	Callback = function(state)
		autosell = state
		if autosell then
			task.spawn(function()
				while autosell do
					Remotes.SellFish:InvokeServer()
					task.wait(1)
				end
			end)
		end
	end
})
MainTab:CreateDivider("Rods")
local RodsBuyList = {
	{Id = 3,Name="Rod 2 ($500)"},
	{Id = 4,Name="Quick Rod ($2000)"},
	{Id = 5,Name="Love Rod ($4000)"},
	{Id = 6,Name="Lucky Rod ($7500)"},
}

for i,v in ipairs(RodsBuyList) do
	MainTab:CreateButton({
		Name = string.format("Buy %s", tostring(v.Name)),
		Callback = function()
			Remotes.UseRod:InvokeServer(v.Id)
		end
	})
end
